{"version":3,"sources":["../../src/app.ts"],"names":["get","resource","creds","fetch","method","headers","Authorization","btoa","then","response","json","put","data","body","JSON","stringify","app","Vue","el","session","loggingin","registering","ready","username","password","repeat","tab","edit","expand","pay","payAmount","contacts","transactions","computed","editTrust","min","undefined","set","val","trust","Number","isNaN","methods","register","checkSession","window","alert","login","logout","setTimeout","localStorage","removeItem","ok","setItem","fetchData","catch","save","index","id","deleteContact","doPay","amount","parseInt","topup","current","receivable","max","contactName","name","getItem","parts","split"],"mappings":";;;;;;AAAA;AAEA,SAASA,GAAT,CAAaC,QAAb,EAAuBC,KAAvB,EAA8B;AAC5B,SAAOC,KAAK,CAACF,QAAD,EAAW;AACrBG,IAAAA,MAAM,EAAE,KADa;AAErBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,kBAAWC,IAAI,CAACL,KAAD,CAAf;AADN;AAFY,GAAX,CAAL,CAKJM,IALI,CAKCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALb,CAAP;AAMD;;AAED,SAASC,GAAT,CAAaV,QAAb,EAAuBW,IAAvB,EAA6BV,KAA7B,EAAoD;AAAA,MAAhBE,MAAgB,uEAAP,KAAO;AAClD,SAAOD,KAAK,CAACF,QAAD,EAAW;AACrBG,IAAAA,MADqB;AAErBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,kBAAWC,IAAI,CAACL,KAAD,CAAf;AADN,KAFY;AAKrBW,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf;AALe,GAAX,CAAL,CAMJJ,IANI,CAMCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANb,CAAP;AAOD;;AAED,IAAMM,GAAG,GAAG,IAAIC,GAAJ,CAAQ;AAClBC,EAAAA,EAAE,EAAE,MADc;AAElBN,EAAAA,IAAI,EAAE;AACJO,IAAAA,OAAO,EAAE,IADL;AAEJC,IAAAA,SAAS,EAAE,KAFP;AAGJC,IAAAA,WAAW,EAAE,KAHT;AAIJC,IAAAA,KAAK,EAAE,KAJH;AAKJC,IAAAA,QAAQ,EAAE,IALN;AAMJC,IAAAA,QAAQ,EAAE,IANN;AAOJC,IAAAA,MAAM,EAAE,IAPJ;AAQJC,IAAAA,GAAG,EAAE,SARD;AASJC,IAAAA,IAAI,EAAE,CAAC,CATH;AAUJC,IAAAA,MAAM,EAAE,CAAC,CAVL;AAWJC,IAAAA,GAAG,EAAE,CAAC,CAXF;AAYJC,IAAAA,SAAS,EAAE,CAZP;AAaJC,IAAAA,QAAQ,EAAE,EAbN;AAcJC,IAAAA,YAAY,EAAE;AAdV,GAFY;AAkBlBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE;AACTlC,MAAAA,GAAG,GAAG;AACJ,YAAMmC,GAAG,GACP,KAAKJ,QAAL,CAAc,KAAKJ,IAAnB,EAAyBQ,GAAzB,KAAiCC,SAAjC,GACI,CADJ,GAEI,KAAKL,QAAL,CAAc,KAAKJ,IAAnB,EAAyBQ,GAH/B;AAIA,eAAO,CAACA,GAAR;AACD,OAPQ;;AAQTE,MAAAA,GAAG,CAACC,GAAD,EAAM;AACP,YAAMC,KAAK,GAAGC,MAAM,CAACC,KAAP,CAAaH,GAAb,IAAoB,CAApB,GAAwBA,GAAtC;AACA,aAAKP,QAAL,CAAc,KAAKJ,IAAnB,EAAyBQ,GAAzB,GAA+B,CAACI,KAAhC;AACD;;AAXQ;AADH,GAlBQ;AAiClBG,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,GAAG;AACT,UAAI,KAAKlB,MAAL,KAAgB,KAAKD,QAAzB,EAAmC;AACjC,aAAKoB,YAAL;AACD,OAFD,MAEO;AACLC,QAAAA,MAAM,CAACC,KAAP,CAAa,yBAAb,EADK,CACoC;AAC1C;AACF,KAPM;;AAQPC,IAAAA,KAAK,GAAG;AACN,WAAKH,YAAL;AACD,KAVM;;AAWPI,IAAAA,MAAM,GAAG;AACP,WAAK7B,OAAL,GAAe,IAAf;AACA,WAAKI,QAAL,GAAgB,IAAhB;AACA,WAAKC,QAAL,GAAgB,IAAhB;AACA,WAAKC,MAAL,GAAc,IAAd;AACAwB,MAAAA,UAAU,CAAC,MAAM;AACfC,QAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACD,OAFS,EAEP,CAFO,CAAV;AAGD,KAnBM;;AAoBPP,IAAAA,YAAY,GAAG;AACb,UAAM1C,KAAK,aAAM,KAAKqB,QAAX,cAAuB,KAAKC,QAA5B,CAAX,CADa,CACsC;;AACnDxB,MAAAA,GAAG,CAAC,UAAD,EAAaE,KAAb,CAAH,CACGM,IADH,CACQI,IAAI,IAAI;AACZ,YAAIA,IAAI,CAACwC,EAAT,EAAa;AACX,eAAKhC,SAAL,GAAiB,KAAjB;AACA,eAAKC,WAAL,GAAmB,KAAnB;AACA,eAAKF,OAAL,GAAe,IAAf,CAHW,CAIX;;AACA8B,UAAAA,UAAU,CAAC,MAAM;AACfC,YAAAA,YAAY,CAACG,OAAb,CAAqB,OAArB,EAA8BnD,KAA9B;AACD,WAFS,EAEP,CAFO,CAAV;AAGA,eAAKoD,SAAL,CAAe,UAAf;AACA,eAAKA,SAAL,CAAe,cAAf;AACD;;AACD,aAAKhC,KAAL,GAAa,IAAb;AACD,OAdH,EAeGiC,KAfH,CAeS,MAAM;AACX,aAAKjC,KAAL,GAAa,IAAb;AACD,OAjBH;AAkBD,KAxCM;;AAyCPgC,IAAAA,SAAS,CAACrD,QAAD,EAAW;AAClBD,MAAAA,GAAG,YAAKC,QAAL,aAAoB,KAAKsB,QAAzB,cAAqC,KAAKC,QAA1C,EAAH,CAAyDhB,IAAzD,CAA8DI,IAAI,IAAI;AACpE,YAAIA,IAAI,CAACX,QAAD,CAAR,EAAoB;AAClB,eAAKA,QAAL,IAAiBW,IAAI,CAACX,QAAD,CAArB;AACD;AACF,OAJD;AAKD,KA/CM;;AAgDPuD,IAAAA,IAAI,CAACvD,QAAD,EAAWwD,KAAX,EAAkB;AACpB,UAAI;AAAEC,QAAAA;AAAF,UAAS,KAAKzD,QAAL,EAAewD,KAAf,CAAb;;AACA,UAAIC,EAAE,KAAKtB,SAAX,EAAsB;AACpBsB,QAAAA,EAAE,GAAG,KAAL;AACD;;AACD/C,MAAAA,GAAG,YACGV,QADH,cACeyD,EADf,GAED,KAAKzD,QAAL,EAAewD,KAAf,CAFC,YAGE,KAAKlC,QAHP,cAGmB,KAAKC,QAHxB,EAAH,CAIEhB,IAJF,CAIOI,IAAI,IAAI;AACb,YAAIA,IAAI,CAACX,QAAD,CAAR,EAAoB;AAClB,eAAKA,QAAL,IAAiBW,IAAI,CAACX,QAAD,CAArB;AACD;AACF,OARD;AASD,KA9DM;;AA+DP0D,IAAAA,aAAa,CAACF,KAAD,EAAQ;AACnB9C,MAAAA,GAAG,qBACY,KAAKoB,QAAL,CAAc0B,KAAd,EAAqBC,EADjC,GAED,EAFC,YAGE,KAAKnC,QAHP,cAGmB,KAAKC,QAHxB,GAID,QAJC,CAAH,CAKEhB,IALF,CAKOI,IAAI,IAAI;AACb,YAAIA,IAAI,CAACmB,QAAT,EAAmB;AACjB,eAAKA,QAAL,GAAgBnB,IAAI,CAACmB,QAArB;AACD;AACF,OATD;AAUD,KA1EM;;AA2ED6B,IAAAA,KAAN,CAAYH,KAAZ,EAAmB;AAAA;;AAAA;AACjB;AACA;AACA,YAAMI,MAAM,GAAGC,QAAQ,CAAC,KAAI,CAAChC,SAAN,EAAiB,EAAjB,CAAvB;AACA,YAAMiC,KAAK,GACT,KAAI,CAAChC,QAAL,CAAc0B,KAAd,EAAqBO,OAArB,GACA,KAAI,CAACjC,QAAL,CAAc0B,KAAd,EAAqBQ,UADrB,GAEAJ,MAFA,GAGA,KAAI,CAAC9B,QAAL,CAAc0B,KAAd,EAAqBS,GAJvB,CAJiB,CAUjB;AACA;;AACA,YAAIH,KAAK,GAAG,CAAZ,EAAe;AACb;AACA,gBAAMpD,GAAG,CACP,QADO,EAEP;AACEwD,YAAAA,WAAW,EAAE,KAAI,CAACpC,QAAL,CAAc0B,KAAd,EAAqBW,IADpC;AAEEP,YAAAA,MAAM,EAAEE;AAFV,WAFO,YAMJ,KAAI,CAACxC,QAND,cAMa,KAAI,CAACC,QANlB,EAAT;AAQD,SAVD,MAUO,CACL;AACD;;AACD,YAAMZ,IAAI,SAASD,GAAG,CACpB,MADoB,EAEpB;AACEwD,UAAAA,WAAW,EAAE,KAAI,CAACpC,QAAL,CAAc0B,KAAd,EAAqBW,IADpC;AAEEP,UAAAA,MAAM,EAAEC,QAAQ,CAAC,KAAI,CAAChC,SAAN,EAAiB,EAAjB;AAFlB,SAFoB,YAMjB,KAAI,CAACP,QANY,cAMA,KAAI,CAACC,QANL,EAAtB;;AAQA,YAAIZ,IAAI,CAACmB,QAAT,EAAmB;AACjB,UAAA,KAAI,CAACA,QAAL,GAAgBnB,IAAI,CAACmB,QAArB;AACD;;AACD,YAAInB,IAAI,CAACoB,YAAT,EAAuB;AACrB,UAAA,KAAI,CAACA,YAAL,GAAoBpB,IAAI,CAACoB,YAAzB;AACD;AAtCgB;AAuClB;;AAlHM;AAjCS,CAAR,CAAZ;AAuJAiB,UAAU,CAAC,MAAM;AACf,MAAM/C,KAAK,GAAGgD,YAAY,CAACmB,OAAb,CAAqB,OAArB,CAAd;;AACA,MAAInE,KAAK,KAAK,IAAd,EAAoB;AAClBc,IAAAA,GAAG,CAACM,KAAJ,GAAY,IAAZ;AACA;AACD;;AACD,MAAMgD,KAAK,GAAGpE,KAAK,CAACqE,KAAN,CAAY,GAAZ,CAAd;AACA,GAACvD,GAAG,CAACO,QAAL,EAAeP,GAAG,CAACQ,QAAnB,IAA+B8C,KAA/B;AACAtD,EAAAA,GAAG,CAAC4B,YAAJ;AACD,CATS,EASP,CATO,CAAV","sourcesContent":["/* global Vue */\n\nfunction get(resource, creds) {\n  return fetch(resource, {\n    method: \"GET\",\n    headers: {\n      Authorization: `Basic ${btoa(creds)}`\n    }\n  }).then(response => response.json());\n}\n\nfunction put(resource, data, creds, method = \"PUT\") {\n  return fetch(resource, {\n    method,\n    headers: {\n      Authorization: `Basic ${btoa(creds)}`\n    },\n    body: JSON.stringify(data)\n  }).then(response => response.json());\n}\n\nconst app = new Vue({\n  el: \"#app\",\n  data: {\n    session: null,\n    loggingin: false,\n    registering: false,\n    ready: false,\n    username: null,\n    password: null,\n    repeat: null,\n    tab: \"profile\",\n    edit: -1,\n    expand: -1,\n    pay: -1,\n    payAmount: 0,\n    contacts: [],\n    transactions: []\n  },\n  computed: {\n    editTrust: {\n      get() {\n        const min =\n          this.contacts[this.edit].min === undefined\n            ? 0\n            : this.contacts[this.edit].min;\n        return -min;\n      },\n      set(val) {\n        const trust = Number.isNaN(val) ? 0 : val;\n        this.contacts[this.edit].min = -trust;\n      }\n    }\n  },\n  methods: {\n    register() {\n      if (this.repeat === this.password) {\n        this.checkSession();\n      } else {\n        window.alert(\"Passwords don't  match!\"); // eslint-disable-line no-alert\n      }\n    },\n    login() {\n      this.checkSession();\n    },\n    logout() {\n      this.session = null;\n      this.username = null;\n      this.password = null;\n      this.repeat = null;\n      setTimeout(() => {\n        localStorage.removeItem(\"creds\");\n      }, 0);\n    },\n    checkSession() {\n      const creds = `${this.username}:${this.password}`; // make a copy of the model values to avoid race conditions\n      get(\"/session\", creds)\n        .then(data => {\n          if (data.ok) {\n            this.loggingin = false;\n            this.registering = false;\n            this.session = true;\n            // save the session in localStorage:\n            setTimeout(() => {\n              localStorage.setItem(\"creds\", creds);\n            }, 0);\n            this.fetchData(\"contacts\");\n            this.fetchData(\"transactions\");\n          }\n          this.ready = true;\n        })\n        .catch(() => {\n          this.ready = true;\n        });\n    },\n    fetchData(resource) {\n      get(`/${resource}`, `${this.username}:${this.password}`).then(data => {\n        if (data[resource]) {\n          this[resource] = data[resource];\n        }\n      });\n    },\n    save(resource, index) {\n      let { id } = this[resource][index];\n      if (id === undefined) {\n        id = \"new\";\n      }\n      put(\n        `/${resource}/${id}`,\n        this[resource][index],\n        `${this.username}:${this.password}`\n      ).then(data => {\n        if (data[resource]) {\n          this[resource] = data[resource];\n        }\n      });\n    },\n    deleteContact(index) {\n      put(\n        `/contacts/${this.contacts[index].id}`,\n        {},\n        `${this.username}:${this.password}`,\n        \"DELETE\"\n      ).then(data => {\n        if (data.contacts) {\n          this.contacts = data.contacts;\n        }\n      });\n    },\n    async doPay(index) {\n      // console.log('paying '+index+' '+this.payAmount);\n      // console.log(' (balance '+ this.contacts[index].current+')');\n      const amount = parseInt(this.payAmount, 10);\n      const topup =\n        this.contacts[index].current +\n        this.contacts[index].receivable +\n        amount -\n        this.contacts[index].max;\n\n      // FIXME: these PUTs should be POSTs\n      // (blocked on https://github.com/ledgerloops/hubbie/issues/20)\n      if (topup > 0) {\n        // console.log('topup needed first!', { amount, topup });\n        await put(\n          \"/topup\",\n          {\n            contactName: this.contacts[index].name,\n            amount: topup\n          },\n          `${this.username}:${this.password}`\n        );\n      } else {\n        // console.log('no topup needed!', { amount, topup });\n      }\n      const data = await put(\n        \"/pay\",\n        {\n          contactName: this.contacts[index].name,\n          amount: parseInt(this.payAmount, 10)\n        },\n        `${this.username}:${this.password}`\n      );\n      if (data.contacts) {\n        this.contacts = data.contacts;\n      }\n      if (data.transactions) {\n        this.transactions = data.transactions;\n      }\n    }\n  }\n});\n\nsetTimeout(() => {\n  const creds = localStorage.getItem(\"creds\");\n  if (creds === null) {\n    app.ready = true;\n    return;\n  }\n  const parts = creds.split(\":\");\n  [app.username, app.password] = parts;\n  app.checkSession();\n}, 0);\n"],"file":"app.js"}